@using System.Security.Claims
@model InkCanvas.Models.Post
@inject Microsoft.AspNetCore.Identity.UserManager<InkCanvas.Models.User> UserManager

@{
    ViewData["Title"] = $"{Model.Caption}";
}

<style>
    .Buttons {
        width: 200px;
        margin: 0 auto;
        display: inline;
    }

    .Likes {
        width: 200px;
        margin: 0 auto;
        display: inline;
    }

    .Subs {
        width: 200px;
        margin: 0 auto;
        display: inline;
    }
</style>

@if (!string.IsNullOrEmpty(Model.ImageUrl))
{
    <img src="@Model.ImageUrl" alt="Post Image" style="max-width: 500px; max-height: 500px;" />
}
<h2>@Html.DisplayFor(model => model.Caption)</h2>
<h4>@Html.DisplayFor(model => model.Description)</h4>
<h4>@Html.DisplayFor(model => model.Date)</h4>

<dd class="col-sm-10">
    @{
        var user = await UserManager.FindByIdAsync(Model.UserId);
        if (user != null)
        {
            <a href="@Url.Action("UserProfile", "Account", new { userId = user.Id })"><h4>@user.Login</h4></a>
        }
        else
        {
            <span>User not found.</span>
        }
    }
    @if (User.FindFirstValue(ClaimTypes.NameIdentifier) == Model.UserId)
    {
        <div class="col-md-6 mb-1">
            <a class="btn btn-secondary" asp-action="Delete" asp-route-id="@Model.PostId">Delete post</a>
        </div>
    }
</dd>

<div class="Buttons">
    @if (User.Identity.IsAuthenticated)
    {
        var isLiked = Model.Likes.Any(l => l.UserId == UserManager.GetUserId(User));
        <button id="likeButton" type="button" class="btn btn-primary" onclick="toggleLike(@Model.PostId)">
            @(isLiked ? "♥" : "♡")
        </button>
    }
    <div id="likeCount">
        @{
            var likeText = Model.Likes.Count switch
            {
                1 => "like",
                _ => "likes"
            };
            <p>@Model.Likes.Count @likeText.</p>
        }
    </div>
    @if (User.Identity.IsAuthenticated)
    {
        <form asp-controller="Comments" asp-action="CreateComment" method="post">
            <input type="hidden" name="postId" value="@Model.PostId" />
            <textarea name="commentText" class="form-control" rows="3" required></textarea>
            <button type="submit" class="btn btn-primary">Comment</button>
        </form>
    }
</div>
</div>

<hr />

<div>
    @Html.Partial("CommentsList", Model.Comments)
</div>

<form action="javascript:history.back()" class="m-0">
    <button type="submit" class="btn btn-secondary">Back</button>
</form>

<script>
    function toggleLike(postId) {
        $.post({
            url: "/Likes/Like",
            data: { postId: postId },
            success: function (data) {
                const likeButton = document.getElementById('likeButton');
                const likeCount = document.getElementById('likeCount');

                // Toggle like button text
                if (likeButton.innerText === '♡') {
                    likeButton.innerText = '♥';
                } else {
                    likeButton.innerText = '♡';
                }

                // Update like count text
                let likeText;
                switch (data.likeCount) {
                    case 1:
                        likeText = "like";
                        break;
                    default:
                        likeText = "likes";
                        break;
                }
                likeCount.innerHTML = `<p>${data.likeCount} ${likeText}</p>`;
            },
            error: function (error) {
                console.error(error);
            }
        });
    }
</script>
